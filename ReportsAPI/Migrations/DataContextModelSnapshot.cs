// <auto-generated />
using System;
using Entities.DataContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ReportsAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Entities.Models.Income", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateClose")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("IncomeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastChangeDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("MarketplaceId")
                        .HasColumnType("integer");

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("SupplierArticle")
                        .HasColumnType("text");

                    b.Property<string>("TechSize")
                        .HasColumnType("text");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("integer");

                    b.Property<string>("WarehouseName")
                        .HasColumnType("text");

                    b.Property<int>("nmId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MarketplaceId");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("Entities.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("OperationId")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<int>("sku")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OperationId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Entities.Models.Marketplace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ApiKey")
                        .HasColumnType("text");

                    b.Property<string>("ClientId")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("TypeMarket")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Marketplaces");
                });

            modelBuilder.Entity("Entities.Models.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("PostingId")
                        .HasColumnType("integer");

                    b.Property<decimal>("accruals_for_sale")
                        .HasColumnType("numeric");

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("delivery_charge")
                        .HasColumnType("numeric");

                    b.Property<string>("operation_date")
                        .HasColumnType("text");

                    b.Property<long>("operation_id")
                        .HasColumnType("bigint");

                    b.Property<string>("operation_type")
                        .HasColumnType("text");

                    b.Property<string>("operation_type_name")
                        .HasColumnType("text");

                    b.Property<decimal>("return_delivery_charge")
                        .HasColumnType("numeric");

                    b.Property<decimal>("sale_commission")
                        .HasColumnType("numeric");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PostingId");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("Entities.Models.Posting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("delivery_schema")
                        .HasColumnType("text");

                    b.Property<string>("order_date")
                        .HasColumnType("text");

                    b.Property<string>("posting_number")
                        .HasColumnType("text");

                    b.Property<long>("warehouse_id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Postings");
                });

            modelBuilder.Entity("Entities.Models.ReportDetailByPeriod", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("barcode")
                        .HasColumnType("text");

                    b.Property<string>("brand_name")
                        .HasColumnType("text");

                    b.Property<double>("commission_percent")
                        .HasColumnType("double precision");

                    b.Property<int>("delivery_amount")
                        .HasColumnType("integer");

                    b.Property<int>("delivery_rub")
                        .HasColumnType("integer");

                    b.Property<string>("doc_type_name")
                        .HasColumnType("text");

                    b.Property<string>("gi_box_type_name")
                        .HasColumnType("text");

                    b.Property<int>("gi_id")
                        .HasColumnType("integer");

                    b.Property<int>("nm_id")
                        .HasColumnType("integer");

                    b.Property<string>("office_name")
                        .HasColumnType("text");

                    b.Property<DateTime>("order_dt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("ppvz_office_id")
                        .HasColumnType("double precision");

                    b.Property<string>("ppvz_office_name")
                        .HasColumnType("text");

                    b.Property<double>("ppvz_reward")
                        .HasColumnType("double precision");

                    b.Property<int>("ppvz_supplier_id")
                        .HasColumnType("integer");

                    b.Property<double>("ppvz_vw")
                        .HasColumnType("double precision");

                    b.Property<double>("ppvz_vw_nds")
                        .HasColumnType("double precision");

                    b.Property<int>("product_discount_for_report")
                        .HasColumnType("integer");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.Property<int>("realizationreport_id")
                        .HasColumnType("integer");

                    b.Property<double>("retail_amount")
                        .HasColumnType("double precision");

                    b.Property<int>("retail_price")
                        .HasColumnType("integer");

                    b.Property<double>("retail_price_withdisc_rub")
                        .HasColumnType("double precision");

                    b.Property<int>("return_amount")
                        .HasColumnType("integer");

                    b.Property<long>("rid")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("rr_dt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("rrd_id")
                        .HasColumnType("bigint");

                    b.Property<string>("sa_name")
                        .HasColumnType("text");

                    b.Property<DateTime>("sale_dt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("sale_percent")
                        .HasColumnType("double precision");

                    b.Property<long>("shk_id")
                        .HasColumnType("bigint");

                    b.Property<string>("subject_name")
                        .HasColumnType("text");

                    b.Property<string>("supplier_oper_name")
                        .HasColumnType("text");

                    b.Property<int>("supplier_promo")
                        .HasColumnType("integer");

                    b.Property<string>("suppliercontract_code")
                        .HasColumnType("text");

                    b.Property<string>("ts_name")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("ReportDetailByPeriods");
                });

            modelBuilder.Entity("Entities.Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("text");

                    b.Property<string>("CountryName")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DiscountPercent")
                        .HasColumnType("integer");

                    b.Property<bool>("IsRealization")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStorno")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSupply")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastChangeDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.Property<string>("OrderId")
                        .HasColumnType("text");

                    b.Property<int>("PromoCodeDiscount")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("SupplierArticle")
                        .HasColumnType("text");

                    b.Property<string>("TechSize")
                        .HasColumnType("text");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric");

                    b.Property<string>("WarehouseName")
                        .HasColumnType("text");

                    b.Property<string>("brand")
                        .HasColumnType("text");

                    b.Property<string>("category")
                        .HasColumnType("text");

                    b.Property<decimal>("finishedPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal>("forPay")
                        .HasColumnType("numeric");

                    b.Property<string>("gNumber")
                        .HasColumnType("text");

                    b.Property<int>("incomeID")
                        .HasColumnType("integer");

                    b.Property<int>("nmId")
                        .HasColumnType("integer");

                    b.Property<string>("oblastOkrugName")
                        .HasColumnType("text");

                    b.Property<long>("odid")
                        .HasColumnType("bigint");

                    b.Property<decimal>("priceWithDisc")
                        .HasColumnType("numeric");

                    b.Property<string>("regionName")
                        .HasColumnType("text");

                    b.Property<string>("saleID")
                        .HasColumnType("text");

                    b.Property<int>("spp")
                        .HasColumnType("integer");

                    b.Property<string>("subject")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("Entities.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("text");

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<int>("DaysOnSite")
                        .HasColumnType("integer");

                    b.Property<int>("Discount")
                        .HasColumnType("integer");

                    b.Property<int>("InWayFromClient")
                        .HasColumnType("integer");

                    b.Property<int>("InWayToClient")
                        .HasColumnType("integer");

                    b.Property<int>("IsRealisation")
                        .HasColumnType("integer");

                    b.Property<int>("IsSupply")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastChangeDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("NmId")
                        .HasColumnType("bigint");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("QuantityFull")
                        .HasColumnType("integer");

                    b.Property<int>("QuantityNotInOrders")
                        .HasColumnType("integer");

                    b.Property<string>("SCCode")
                        .HasColumnType("text");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.Property<string>("SupplierArticle")
                        .HasColumnType("text");

                    b.Property<string>("TechSize")
                        .HasColumnType("text");

                    b.Property<string>("WarehouseName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("Entities.Models.Income", b =>
                {
                    b.HasOne("Entities.Models.Marketplace", "Marketplace")
                        .WithMany("Incomes")
                        .HasForeignKey("MarketplaceId");

                    b.Navigation("Marketplace");
                });

            modelBuilder.Entity("Entities.Models.Item", b =>
                {
                    b.HasOne("Entities.Models.Operation", "Operation")
                        .WithMany("items")
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operation");
                });

            modelBuilder.Entity("Entities.Models.Operation", b =>
                {
                    b.HasOne("Entities.Models.Posting", "posting")
                        .WithMany("Operations")
                        .HasForeignKey("PostingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("posting");
                });

            modelBuilder.Entity("Entities.Models.Marketplace", b =>
                {
                    b.Navigation("Incomes");
                });

            modelBuilder.Entity("Entities.Models.Operation", b =>
                {
                    b.Navigation("items");
                });

            modelBuilder.Entity("Entities.Models.Posting", b =>
                {
                    b.Navigation("Operations");
                });
#pragma warning restore 612, 618
        }
    }
}
